searchState.loadedDescShard("mavlink_bindgen", 0, "Prints definitions for cargo that describe which files the …\nFormats generated code using <code>rustfmt</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerate Rust MAVLink dialect binding for dialects present …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRepresents a failure to create a Rust file for the …\nRepresents a failure to read a MAVLink definition file.\nRepresents a failure to read the MAVLink definitions …\nRepresents a failure to read a directory entry in the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCompare two MavTypes\nCRC operates over names of the message and names of its …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerate protobuf represenation of mavlink message set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf contains Some, the string represents the primitive type …\nUsed for crc calculation\nReturn rust equivalent of the primitive type of a MavType. …\nEmit reader of a given type\nReturn rust equivalent of a given Mavtype Used for …\nEmit writer of a given type")