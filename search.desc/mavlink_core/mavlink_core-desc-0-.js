searchState.loadedDescShard("mavlink_core", 0, "The MAVLink message set.\nAttempt to read messages from both MAVLink versions\nA MAVLink connection address that can be connected to, …\nAn async MAVLink connection\nA MAVLink connection address that can be connected to, …\nA parsed MAVLink connection address\nFile input address\nMAVLink connection address for a file input\nRaw byte representation of a MAVLink message of either …\nByte buffer containing the raw representation of a MAVLink …\nByte buffer containing the raw representation of a MAVLink …\nMessage framing marker for MAVLink 1\nMessage framing marker for MAVLink 2\nMaximum size of any MAVLink frame in bytes.\nA MAVLink connection\nEncapsulation of the MAVLink message and the header, …\nMetadata from a MAVLink packet header\nVersions of the MAVLink protocol that we support\nA MAVLink message payload\nMAVLink Version selection when attempting to read\nSerial port address\nMAVLink address for a serial connection\nConfiguration used for MAVLink 2 messages signing as …\nMAVLink 2 message signing data\nOnly attempt to read using a single MAVLink version\nTCP client or server address\nMAVLink connection address for a TCP server or client\nUDP client, server or broadcast address\nMAVLink address for a UDP server client or broadcast …\nType of UDP connection\nClient connection that is allowed to send to broadcast …\nServer connection waiting for a client connection\nClient connection connecting to a server\nVersion v1.0\nVersion v2.0\nWether messages of any MAVLink version may be received\nWether messages of any MAVLink version may be received\nThis module implements a buffered/peekable reader using …\nCalculates the CRC checksum of a messages header, payload …\nCalculates the messages sha256_48 signature.\nCRC-16 checksum field of the message\nCRC-16 checksum field of the message\nReference to the 2 checksum bytes of the message\nCompatibility Flags of the message\nMessage sender Component ID\nMessage sender Component ID\nSender component ID\nConnect to a MAVLink node by address string.\nAttempt to establish a blocking MAVLink connection\nConnect asynchronously to a MAVLink node by address string.\nAttempt to establish an asynchronous MAVLink connection\nReturn a default message of the speicfied message id\nDeserialize MavFrame from a slice that has been received …\nReturn a message types CRC_EXTRA byte\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInitializes signing data from a given <code>SigningConfig</code>\nChecks wether the message’s CRC-16 checksum calculation …\nChecks wether the message’s CRC-16 checksum calculation …\nReturn the frame header\nReference to the 5 byte header slice of the message\nReference to the 9 byte header slice of the message\nMessage header data\nIncompatiblity flags of the message\nMutable reference to the incompatiblity flags of the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMAVLink message ID\nMessage ID\nMessage ID\nReturn message id of specific message name\nMAVLink message name\nParsed <code>Message</code> payload\nCreates a new signing configuration.\nCreates a UDP connection address.\nCreates a serial connection address with port name and …\nCreates a TCP connection address.\nCreates a file input address from a file path string.\nCreate an new raw MAVLink 1 message filled with zeros.\nCreate an new raw MAVLink 2 message filled with zeros.\nParse a Message from its message id and payload bytes\nParse a MAVLink address string.\nReference to the payload byte slice of the message\nReference to the payload byte slice of the message\nSize of the payload of the message\nSize of the payload of the message\nThis module implements a buffered/peekable reader.\nGets the currently used MAVLink version\nGets the currently used MAVLink version\nMessages MAVLink version\nRaw byte slice of the message\nRaw byte slice of the message\nRead and parse a MAVLink 1 or 2 message from a <code>PeekReader</code>.\nAsynchronously read and parse a MAVLink 1 or 2 message …\nAsynchronously read and parse a MAVLink 1 or 2 message …\nRead and parse a MAVLink 1 or 2 message from a <code>PeekReader</code> …\nRead a raw MAVLink 1 or 2 message from a <code>PeekReader</code>.\nAsynchronously read a raw MAVLink 1 or 2 message from a …\nAsynchronously read a raw MAVLink 1 or 2 message from a …\nRead a raw MAVLink 1 or 2 message from a <code>PeekReader</code> with …\nRead and parse a MAVLink 1 message from a <code>PeekReader</code>.\nAsynchronously read and parse a MAVLink 1 message from a …\nRead a raw MAVLink 1 message from a <code>PeekReader</code>.\nAsynchronously read a raw MAVLink 1 message from a …\nRead and parse a MAVLink 2 message from a <code>PeekReader</code>.\nAsynchronously read and parse a MAVLink 2 message from a …\nAsynchronously read and parse a MAVLink 2  message from a …\nRead and parse a MAVLink 2 message from a <code>PeekReader</code>.\nRead a raw MAVLink 2 message from a <code>PeekReader</code>.\nAsynchronously read a raw MAVLink 2 message from a …\nAsynchronously read a raw MAVLink 2 message with signing …\nRead a raw MAVLink 2 message with signing support from a …\nRead and parse a MAVLink message of the specified version …\nAsynchronously read and parse a MAVLink message of the …\nAsynchronously read and parse a MAVLink message of the …\nRead and parse a MAVLink message of the specified version …\nReceive a MAVLink message.\nReceive a mavlink message.\nRead whole frame\nRead whole frame\nRead whole frame\nRead whole frame\nSend a MAVLink message\nSend a mavlink message\nSend a message with default header\nSend a message with default header\nSend a message with default header\nSend a message with default header\nWrite whole frame\nWrite whole frame\nWrite whole frame\nWrite whole frame\nPacket sequence number\nPacket sequence number\nPacket sequence number\nSerialize <strong>Message</strong> into byte slice and return count of …\nSerialize MavFrame into a byte slice, so it can be sent …\nSerialize a <code>Message</code> with a given header into this raw …\nSerialize a Message with a given header into this raw …\nSerialize a Message with a given header into this raw …\nSet wether MAVLink messages of either version may be …\nSet wether MAVLink messages of either version may be …\nSets the MAVLink version to use for receiving (when …\nSets the MAVLink version to use for receiving (when …\nSetup secret key used for message signing, or disable …\nSetup secret key used for message signing, or disable …\nSign a MAVLink 2 message if its incompatibility flag is …\nSignature Link ID\nMutable reference to the signature Link ID\nMessage signature timestamp\n48 bit signature timestamp byte slice\nMutable reference to the 48 bit signature timestams byte …\nReference to the 48 bit message signature byte slice\nMutable reference to the 48 bit message signature byte …\nMessage sender System ID\nMessage sender System ID\nSender system ID\nTry to receive a MAVLink message.\nUtilities for processing MAVLink messages\nVerify the signature of a MAVLink 2 message.\nWrite a MAVLink 1 message to a <code>Write</code>r.\nAsynchronously write a MAVLink 1 message to a <code>AsyncWrite</code>r.\nWrite a MAVLink 2 message to a <code>Write</code>r.\nAsynchronously write a MAVLink 2 message to a <code>AsyncWrite</code>r.\nWrite a MAVLink 2 message to a <code>AsyncWrite</code>r with signing …\nWrite a MAVLink 2 message to a <code>Write</code>r with signing support.\nWrite a MAVLink message using the given mavlink version to …\nAsynchronously write a MAVLink message using the given …\nAsynchronously write a MAVLink message using the given …\nWrite a MAVLink message using the given mavlink version to …\nA buffered/peekable reader\nConsumes a specified amount of bytes from the buffer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nInstantiates a new <code>AsyncPeekReader</code>, wrapping the provided …\nPeeks an exact amount of bytes from the internal buffer\nReads a specified amount of bytes from the internal buffer\nReads a byte from the internal buffer\nReturns a mutable reference to the underlying …\nReturns an immutable reference to the underlying …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nEnum value for this enum type does not exist\nBit flag for this type is invalid\nIO Error while reading\nIO Error while writing\nError while reading and parsing a MAVLink message\nError while writing a MAVLink message\nError while parsing\nError while parsing a MAVLink message\nMessage ID does not exist in this message set\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA buffered/peekable reader\nConsumes a specified amount of bytes from the buffer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nInstantiates a new <code>PeekReader</code>, wrapping the provided …\nPeeks an exact amount of bytes from the internal buffer\nReads a specified amount of bytes from the internal buffer\nReads a byte from the internal buffer\nReturns a mutable reference to the underlying <code>std::io::Read</code>…\nReturns an immutable reference to the underlying …\nA trait very similar to <code>Default</code> but is only implemented …\nRemoves the trailing zeroes in the payload")